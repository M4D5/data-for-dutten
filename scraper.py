import time
start_time = time.time()

import urllib2
import re
import pickle
import pprint
from bs4 import BeautifulSoup
import json
import sys
import secret
grades=["Ej m&#248;dt", "Syg", "Best&#229;et", "Ikke best&#229;et", "-3", "00", "02", "4", "7", "10", "12"]
gradesfields=list(grades)
gradesfields[0:4]=["dns", "sick", "p", "np"]


courses=["01006","01018","01227","01236","01257","01325","01405","01410","01415","01418","01426","01427","01527","01617","01618","01715","01716","02001","02110","02141","02155","02156","02157","02158","02159","02162","02165","02170","02180","02190","02203","02204","02205","02209","02211","02213","02217","02220","02223","02224","02228","02232","02233","02234","02238","02239","02242","02244","02246","02247","02249","02255","02257","02263","02264","02265","02266","02267","02281","02282","02284","02285","02287","02291","02341","02393","02402","02403","02407","02409","02411","02413","02417","02418","02421","02424","02425","02427","02429","02431","02435","02441","02443","02450","02451","02452","02453","02454","02456","02457","02458","02460","02504","02505","02506","02507","02513","02515","02561","02562","02564","02565","02582","02585","02586","02602","02610","02612","02614","02616","02619","02623","02625","02631","02632","02633","02634","02635","02685","02692","02805","02806","02807","02808","02809","02823","02826","02830","02840","02841","02901","02904","02906","02910","02913","02921","02930","02932","02935","02936","02938","02940","02941","02943","02947","02948","02949","02950","10018","10041","10104","10112","10122","10200","10209","10220","10240","10250","10302","10303","10304","10305","10314","10315","10333","10337","10346","10380","10384","10386","10400","10401","10405","10420","10501","10502","10506","10508","10512","10520","10530","10540","10605","10610","10720","10721","10722","10730","10731","10732","10800","10811","10814","11020","11022","11023","11034","11050","11066","11067","11080","11115","11116","11117","11122","11124","11127","11128","11129","11142","11221","11222","11320","11331","11346","11347","11351","11352","11365","11374","11375","11376","11418","11420","11430","11440","11441","11442","11443","11450","11451","11463","11464","11465","11521","11522","11525","11563","11569","11619","11627","11830","11853","11854","11857","11858","11859","11900","11909","11955","11956","11957","11970","11982","11995","11B12","12102","12104","12111","12121","12122","12124","12130","12131","12132","12134","12135","12136","12138","12139","12140","12142","12143","12144","12210","12226","12231","12233","12237","12238","12320","12326","12330","12331","12333","12335","12342","12343","12600","12701","12810","12811","12812","12813","12902","12909","12911","12915","12918","12919","12920","12922","12925","12933","13150","13400","23101","23102","23151","23152","23153","23154","23205","23258","23271","23281","23301","23302","23511","23512","23520","23521","23522","23531","23532","23551","23552","23564","23661","23711","23832","23836","23837","24003","24004","24101","24102","24201","24690","24691","24901","24902","24903","24999","25102","25104","25105","25302","25303","25305","25307","25309","25310","25311","25312","25313","25314","25315","25316","25318","25320","25321","25322","25323","25324","25325","25326","25327","25328","25330","25608","25613","25801","25803","25805","26003","26009","26011","26027","26028","26030","26122","26125","26126","26130","26225","26231","26236","26245","26255","26261","26265","26290","26317","26327","26330","26407","26416","26422","26426","26428","26433","26436","26438","26444","26474","26510","26701","26702","26900","26912","26920","26925","26932","26944","26960","27008","27016","27034","27040","27042","27106","27107","27230","27250","27254","27270","27303","27322","27405","27411","27412","27417","27419","27420","27421","27430","27432","27610","27615","27617","27625","27626","27636","27641","27683","27685","27692","27750","27800","27803","27815","27820","27822","27823","27824","27825","27826","27828","28121","28122","28123","28124","28125","28140","28150","28212","28213","28214","28221","28231","28233","28242","28244","28246","28247","28271","28310","28315","28316","28345","28350","28361","28415","28420","28423","28434","28443","28451","28515","28530","28811","28831","28845","28850","28852","28855","28864","28870","28871","28872","28885","28891","28892","28901","28902","28904","28905","28908","28909","28917","28924","28927","28928","28930","28931","88700","88701","88703","88704","88705","88707","88708","88709","88710","88711","88713","88714","88715","88721","88722","88723","30200","30210","30220","30230","30300","30320","30330","30340","30350","30510","30530","30532","30535","30540","30550","30560","30571","30720","30730","30740","30742","30750","30752","30760","30786","30790","30792","31035","31039","31070","31200","31220","31221","31230","31232","31236","31237","31238","31240","31241","31245","31250","31260","31265","31270","31280","31305","31310","31320","31321","31324","31340","31342","31343","31344","31345","31352","31353","31354","31357","31359","31371","31372","31375","31380","31383","31384","31385","31388","31400","31405","31412","31415","31418","31420","31428","31430","31435","31445","31470","31511","31522","31523","31524","31528","31529","31532","31540","31545","31547","31549","31550","31551","31552","31553","31560","31561","31566","31567","31590","31598","31606","31631","31632","31633","31700","31730","31742","31745","31750","31756","31761","31770","31773","31778","31782","31783","31786","31795","31905","31906","31907","31908","31910","31920","31930","31931","31932","31933","33206","33236","33250","33253","33255","33281","33321","33323","33334","33336","33355","33422","33442","33470","33471","33481","33482","33525","33526","33527","33528","33621","33647","33681","33691","33692","33694","33901","33902","34020","34031","34032","34034","34041","34042","34046","34051","34052","34053","34054","34055","34058","34069","34091","34092","34126","34129","34130","34141","34150","34153","34190","34191","34229","34230","34240","34241","34249","34250","34251","34269","34290","34330","34339","34341","34342","34343","34345","34349","34350","34351","34352","34354","34355","34357","34358","34359","34361","34390","34393","34430","34451","34454","34455","34492","34493","34495","34539","34540","34541","34550","34590","34591","34803","34804","34903","34904","41072","41073","41078","41083","41084","41106","41111","41113","41117","41126","41129","41214","41216","41221","41222","41224","41225","41263","41271","41275","41315","41319","41323","41343","41346","41390","41391","41392","41416","41420","41421","41490","41491","41511","41512","41514","41515","41516","41517","41521","41524","41525","41526","41527","41562","41591","41616","41617","41628","41632","41633","41650","41653","41655","41656","41658","41660","41661","41663","41664","41665","41667","41680","41690","41691","41706","41709","41730","41731","41732","41733","41736","41737","41738","41742","41743","41744","41747","41748","41790","41791","41792","41810","41811","41812","41813","41814","41822","41888","42002","42003","42004","42006","42071","42081","42084","42085","42086","42090","42104","42105","42111","42112","42114","42115","42116","42123","42124","42125","42136","42137","42142","42171","42172","42177","42178","42179","42180","42181","42182","42183","42195","42259","42262","42274","42275","42280","42286","42348","42349","42350","42351","42371","42372","42373","42375","42376","42377","42378","42401","42413","42429","42430","42432","42433","42435","42436","42438","42451","42452","42457","42459","42461","42467","42490","42532","42543","42554","42575","42631","42640","42702","42711","42712","42713","42714","42716","42740","42741","42781","42784","42799","42873","42877","42878","42879","42880","42881","42882","42883","42884","42885","42886","42887","42990","42B50","42B51","42B52","42B53","42B61","42B62","42B64","42B70","42B71","42B72","42B73","42B80","42MMT","88706","46010","46100","46110","46200","46211","46230","46300","46310","46320","46400","46411","46415","46420","46430","46500","46800","46900","46910","47301","47302","47303","47304","47305","47309","47310","47311","47312","47313","47314","47316","47317","47318","47319","47320","47321","47322","47323","47324","47325","47326","47327","47328","47409","47413","47414","47420","47421","47422","47423","47501","47502","47506","47507","47508","47509","KU012","KU028","KU101","KU103","KU105","KU180","KU181","62001","62132","62133","62134","62135","62141","62160","62170","62171","62180","62187","62190","62200","62202","62204","62209","62221","62238","62240","62243","62244","62361","62365","62379","62381","62382","62383","62385","62387","62391","62393","62474","62501","62508","62519","62528","62530","62531","62538","62547","62548","62549","62551","62570","62572","62579","62580","62583","62584","62595","62598","62614","62615","62618","62626","62629","62630","62634","62643","62662","62691","62692","62700","62726","62849","62999","62P22","","01003","01005","01015","01016","01017","01025","01035","01036","01037","01125","01237","01666","01901","01902","01903","01904","02101","02102","02105","02121","02122","02128","02131","02138","02139","02148","02161","02312","02313","02314","02315","02318","02320","02321","02323","02324","02326","02327","02332","02343","02347","02350","02362","02363","02368","02402","02403","02405","02502","02508","02511","02512","02525","02526","02601","02609","02631","02632","02633","02634","02692","10020","10022","10024","10031","10033","10034","10036","10044","10050","10052","10054","10102","10103","10209","10347","10467","10720","10721","10722","10900","10910","10916","10933","10935","11000","11010","11031","11035","11110","11112","11121","11140","11141","11202","11203","11305","11311","11318","11341","11342","11343","11411","11462","11561","11562","11691","11760","11763","11765","11821","11823","11824","11825","11829","11831","11832","11833","11835","11836","11837","11911","11921","11936","11937","11946","11947","11951","11952","11953","11954","11955","11956","11957","11968","11970","11990","11993","11994","11996","11997","11B01","12000","12003","12202","12203","12205","12500","12810","12811","12812","12813","23561","23732","23733","23734","23901","23902","23921","23923","23932","23935","23951","23962","23981","24001","24002","24005","24007","24008","26000","26006","26008","26010","26027","26050","26122","26124","26125","26171","26173","26199","26201","26202","26222","26225","26271","26299","26301","26371","26372","26374","26400","26411","26471","26499","27002","27004","27007","27015","27022","27023","27026","27027","27035","27051","27422","27461","27611","27633","28001","28012","28016","28017","28020","28022","28025","28121","28125","28157","28160","28182","28322","28342","28344","28352","30010","30020","30021","30032","30081","30082","30090","30100","30110","30120","30130","30140","30150","30160","31001","31003","31013","31015","31036","31300","31301","31351","31373","31501","31502","31520","31533","31534","31540","31605","31700","33257","33442","33472","33480","34021","34029","34120","34127","34210","34220","34302","34311","34315","34318","34319","41000","41010","41012","41015","41020","41030","41031","41035","41045","41051","41102","41112","41202","41203","41236","41263","41270","41271","41280","41312","41342","41344","41401","41402","41409","41422","41501","41502","41533","41534","41560","41603","41612","41618","41651","41659","41681","41682","41683","41704","41713","41781","41782","41784","41786","41801","41842","41860","42005","42011","42021","42042","42062","42101","42107","42175","42176","42270","42279","42340","42352","42406","42415","42421","42580","42582","42583","42584","42585","42610","42871","42872","42873","42874","42875","42876","42922","42945","42985","42986","42987","42988","42989","42991","42992","42993","42994","42995","42996","46000","46010","46440","47414","88383","KU002","KU003","KU004","KU005","KU006","KU009","KU010","KU011","62000","62004","62005","62008","62009","62012","62013","62014","62015","62016","62018","62019","62022","62024","62025","62033","62035","62036","62038","62039","62040","62042","62043","62044","62045","62047","62079","62081","62087","62088","62089","62092","62093","62094","62096","62100","62101","62102","62103","62107","62108","62110","62118","62119","62120","62130","62136","62138","62139","62155","62156","62157","62161","62162","62163","62164","62165","62172","62175","62176","62182","62183","62185","62186","62187","62188","62192","62193","62194","62195","62196","62197","62202","62222","62231","62232","62233","62234","62236","62237","62242","62246","62247","62250","62251","62253","62254","62255","62257","62259","62315","62316","62317","62325","62326","62330","62334","62335","62336","62337","62338","62371","62373","62374","62375","62380","62390","62395","62398","62420","62422","62423","62441","62443","62450","62452","62453","62454","62482","62483","62484","62505","62506","62507","62508","62512","62514","62516","62517","62518","62520","62521","62522","62523","62527","62531","62550","62560","62563","62567","62575","62576","62577","62580","62581","62582","62585","62586","62588","62589","62594","62596","62597","62600","62602","62603","62604","62606","62607","62608","62626","62630","62633","62634","62635","62636","62645","62657","62668","62675","62676","62683","62694","62698","62699","62703","62704","62708","62714","62716","62732","62733","62734","62736","62737","62738","62739","62741","62742","62745","62746","62748","62751","62752","62755","62760","62761","62765","62770","62780","62782","62783","62784","62794","62799","62800","62849","62896","62904","62908","62999","62B01","62B02","62B03","62B20","62B24","62B30","62B31","62B39","62B90","62E01","62E02","62E04","62E90","62L13","62L14","62L15","62L23","62L25","62L29","62L32","62L33","62L36","62L40","62L45","62L49","62L51","62L52","62L53","62L54","62L55","62L56","62L61","62L62","62L63","62L64","62L65","62L66","62L90","62L91","62P01","62P02","62P03","62P04","62P05","62P07","62P08","62P25","62P27","62P29","62P30","62P31","62P32","62P90","62P91","62S01","62S02","62S03","62T01","62T04","62T21","62T23","62T25","62T26","62T27","62T28","62T30","62T31","62T32","62T33","62T34","62T90"]
key='ASP.NET_SessionId=' + secret.sessionID
print 'key=' + key
#printlog content

#f = open('myfile.txt','w')
#f.write(content) # python will convert \n to os.linesep
#f.close() # you can omit in most cases as the destructor will call it
f = open('out.txt','w')
def printlog(txt):
    print(txt)
    f.write(txt+'\n') # python will convert \n to os.linesep

def printTime():
    printlog("--- %s seconds ---" % (time.time() - start_time))

def extractstr(pre, post, body):
    m = re.search(pre + '(.+?)' + post, body)
    if m:
        return m.group(1)
    else:
        return ""
def extractURLs(pre, post, body):
    try:
        body = " ".join(body.split())
        body = body.split(pre, 1)[1]
        body = body.split(post, 1)[0]
        return extractlinks(body)
    except:
        return ""

def extractlinks(html):
    soup = BeautifulSoup(html,"html.parser")
    anchors = soup.findAll('a')
    links = []
    for a in anchors:
        links.append(a['href'])
    return links

reqC=0
def gethtml(url):
    global reqC
    reqC+=1
    req = urllib2.Request(url)
    req.add_header('Cookie', key)
    resp = urllib2.urlopen(req)
    return resp
def exp_dict(course):
    global hasExpanded
    if hasExpanded == 0:
        courseDic[course] = {}
    hasExpanded = 1

def RepresentsInt(s):
    try: 
        int(s)
        return True
    except ValueError:
        return False



courseDic={}
fields=["participants", "absent", "sick", "p", "np", "-3", "00", "02", "4", "7", "10", "12"]

for i, course in enumerate(courses):
    printTime()
    courseDic[course] = {}

    hasExpanded=0

    printlog("Analyzing course:" + course + " (" + str(i) + "/" + str(len(courses)) + " : " + str(round( (float(i)/float(len(courses)))*100 ,2)) + "%)")
    #http://karakterer.dtu.dk/Histogram/1/26027/Summer-2016
    #req = urllib2.Request('http://karakterer.dtu.dk/Histogram/1/'+course+'/Summer-2016')
    resp = gethtml('http://kurser.dtu.dk/course/' + course + '/info')

    #<div class="bar">Kursusevalueringer</div>
    infostr = resp.read()
    infostr = " ".join(infostr.split())

    
    reviews=extractURLs('Kursusevalueringer', 'Karakterhistorik', infostr)
    if reviews != "":
        for review in reviews:
            printlog("Review found: " + review)
            resp = gethtml(review)
            if resp.getcode()==200:
                content = resp.read()
                content = " ".join(content.split())
                content = content.split('FinalEvaluation_Result_QuestionPositionColumn"><b>', 1)[1]
                participants = int(extractstr('QuestionPositionColumn"><b>', '</b></td><td>har besvaret', content))
                printlog("Review participants:" + str(participants))
                if participants >= 5 :
                    lst= content.split('FinalEvaluation_Result_AnswerCountColumn">')
                    lst.pop(0)

                    if len(lst) == 43:
                        courseDic[course]["review"] = {}

                        courseDic[course]["review"]["participants"] = participants
                        for j, ls in enumerate(lst):
                            reviewval=int(extractstr('', '<', ls))
                            courseDic[course]["review"]['A' + str(j)] = int(extractstr('', '<', ls))  
                        break
                    else:
                        printlog("Error: Unexpected length of review value list")
                else:
                    printlog("Not enough review participants")
    else:
        printlog("Warning: Cannot format review overview")

    exams=extractURLs('Karakterhistorik', '/a> </div> </div> </div>', infostr);
    if exams != "":
        for exam in exams:
            printlog(exam)
            if (exam != ''):
                printlog("Exam found: " + exam)
                resp = gethtml(exam)
                if resp.getcode()==200:
                    content = resp.read()
                    content = " ".join(content.split())
                    content = content.split('Fremm&#248;dte </td> <td', 1)[1]
                    found = extractstr('> ', ' </td>', content)
                    if (found != ''):
                        printlog("Exam participants:" + found)
                        participants=int(found);
                        if participants >= 5:
                            #exp_dict(course)
                            #grades_given = []
                            courseDic[course]["grades"] = {}
                            tmpgradeslist=[]

                            for i, grade in enumerate(grades):
                                nppl = extractstr(grade + ' </td> <td style="text-align: center"> ', ' </td> <td style="vertical-align', content)
                                if (nppl == ''):
                                    nppl=0
                                    #printlog("Warning: No entry for " + grade)
                                #print 'courseDic['+str(course)+']["grades"]['+gradesfields[i]+']='+str(nppl)
                                courseDic[course]["grades"][gradesfields[i]]=int(nppl)
                                printlog(grade+": " + str(nppl))
                            
                            courseDic[course]["grades"]["participants"] = participants
                            try:
                                avg = content.join(content.split())
                                avg = avg.split('Eksamensgennemsnit', 1)[1]
                                avg = avg.split('Efter 7-',1)[0]
                                avg = extractstr('<td>',' \(', avg).replace(',', '.')
                                avg = float(avg)
                                courseDic[course]["grades"]["avg"] = avg
                            except:
                                printlog("No avg found")

                            try:
                                passpercent = content.replace(" ", "")
                                passpercent = passpercent.split("afdetilmeldte,", 1)[1]
                                passpercent = float(passpercent.split("%afdefremm", 1)[0].replace(',', '.'))
                                courseDic[course]["grades"]["passpercent"] = passpercent
                            except:
                                printlog("No passpercent found")

                            break
                        else:
                            printlog("Not enough exam participants")
            else:
                printlog("Error with exam: " + exam)
    else:
        printlog("Warning: Cannot format exam overview")
    printlog("")  

f = open('courseDic.txt', 'wb')
pickle.dump(courseDic, f)
f.close()

pp = pprint.PrettyPrinter(indent=4)
pp.pprint(courseDic)

printlog("Requests sent: " + reqC)
